class Solution {
    TreeNode* first;
    TreeNode* last;
    TreeNode* prev;
public:
    void inorder(TreeNode* root) {
        if (root == nullptr) return;
        
        inorder(root->left);
        
        if (prev != nullptr && root->val < prev->val) {
            if (first == nullptr) {
                first = prev;
                last = root; 
            } else {
                last = root;
            }
        }
        prev = root;
        
        inorder(root->right);
    }
    
    void recoverTree(TreeNode* root) {
        first = last = prev = nullptr;
        inorder(root);
        swap(first->val, last->val);
    }
};

