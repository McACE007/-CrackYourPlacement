class Solution {
public:
    Node* merge2Lists(Node* l1, Node* l2) {
        if (!l1) return l2;
        if (!l2) return l1;

        Node* head;
        if (l1->data <= l2->data) {
            head = l1;
            head->bottom = merge2Lists(l1->bottom, l2);
        } else {
            head = l2;
            head->bottom = merge2Lists(l1, l2->bottom);
        }
        return head;
    }

    Node *flatten(Node *root) {
        if (!root || !root->next) return root;
        
        return merge2Lists(root, flatten(root->next));
    }
};
