class Solution {
public:
    bool dfs(TreeNode* root, TreeNode* target) {
        if (root == nullptr && target == nullptr) return true;
        if (root == nullptr || target == nullptr) return false;
        if (root->val != target->val) return false;
        return dfs(root->left, target->left) && dfs(root->right, target->right);
    }
    
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if (root == nullptr) return false;
        if (dfs(root, subRoot)) return true;
        return isSubtree(root->left, subRoot) || isSubtree(root->right, subRoot);
    }
};
