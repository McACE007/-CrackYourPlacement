class Solution {
public:
    vector<int> search(string p, string t) {
        vector<int> result;
        int m = p.size();
        int n = t.size();
        
        vector<int> lps(m, 0);
        int j = 0; 
        for(int i = 1; i < m; ) {
            if(p[i] == p[j]) {
                j++;
                lps[i] = j;
                i++;
            } else {
                if(j != 0) {
                    j = lps[j - 1];
                } else {
                    lps[i] = 0;
                    i++;
                }
            }
        }
        
        int i = 0; 
        j = 0;     
        while(i < n) {
            if(p[j] == t[i]) {
                i++;
                j++;
            }
            if(j == m) {
                result.push_back(i - j + 1);
                j = lps[j - 1];
            } else if(i < n && p[j] != t[i]) {
                if(j != 0) {
                    j = lps[j - 1];
                } else {
                    i++;
                }
            }
        }
        
        return result;
    }
};
