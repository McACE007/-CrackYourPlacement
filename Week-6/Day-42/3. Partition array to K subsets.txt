class Solution {
public:
    bool isKPartitionPossible(int arr[], int n, int k) {
        int total = accumulate(arr, arr + n, 0);
        if (total % k != 0) return false;

        int target = total / k;
        vector<int> dp(1 << n, -1);
        dp[0] = 0;

        for (int mask = 0; mask < (1 << n); mask++) {
            if (dp[mask] == -1) continue;
            for (int i = 0; i < n; i++) {
                if (!(mask & (1 << i)) && dp[mask] + arr[i] <= target) {
                    dp[mask | (1 << i)] = (dp[mask] + arr[i]) % target;
                }
            }
        }

        return dp[(1 << n) - 1] == 0;
    }
};
